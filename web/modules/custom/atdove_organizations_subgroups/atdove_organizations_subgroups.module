<?php

/**
 * @file
 * Primary module hooks for AtDove Organizations Subgroups module.
 */

use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_HOOK.
 *
 * Preprocess links--dropbutton.html.twig.
 */
function atdove_organizations_subgroups_preprocess_links__dropbutton(&$vars) {
  // Add to group link.
  if (isset($vars['links']['nothing'])) {
    $url = $vars['links']['nothing']['link']['#url'];
    if ($url->getRouteName() == 'atdove_organizations_subgroups.subgroup.add_member') {
      $route_parameters = $url->getRouteParameters();

      // Get all organizational_groups that are subgroups of the organization.
      $group_hierarchy_manager = \Drupal::service('ggroup.group_hierarchy_manager');
      $subgroups = $group_hierarchy_manager->getGroupSubgroups($route_parameters['group']);
      // If none, unset link.
      if (empty($subgroups)) {
        unset($vars['links']['nothing']);
      }

      // Get all organizational_groups that user is already a member of.
      $user = User::load($route_parameters['user']);
      $subgroups_already_member = [];
      foreach ($subgroups as $subgroup) {
        if ($subgroup->getMember($user)) {
          $subgroups_already_member[$subgroup->id()] = $subgroup;
        }
      }

      // Remove organizational_groups that user is already a member of.
      $avail_subgroups = array_diff_key($subgroups, $subgroups_already_member);
      // Check if there are any subgroups left and if not, unset link.
      if (empty($avail_subgroups)) {
        unset($vars['links']['nothing']);
      }
    }
  }

  // Remove from group link.
  if (isset($vars['links']['nothing_1'])) {
    $url = $vars['links']['nothing_1']['link']['#url'];
    if ($url->getRouteName() == 'atdove_organizations_subgroups.subgroup.remove_member') {
      $route_parameters = $url->getRouteParameters();

      // Get all organizational_groups that are subgroups of the organization.
      $group_hierarchy_manager = \Drupal::service('ggroup.group_hierarchy_manager');
      $subgroups = $group_hierarchy_manager->getGroupSubgroups($route_parameters['group']);
      // If none, unset link.
      if (empty($subgroups)) {
        unset($vars['links']['nothing_1']);
      }

      // Get all organizational_groups that user is a member of.
      $subgroups_is_member = [];
      foreach ($subgroups as $subgroup) {
        if ($subgroup->getMember($user)) {
          $subgroups_is_member[$subgroup->id()] = $subgroup;
        }
      }
      // If none, redirect to organization group.
      if (empty($subgroups_is_member)) {
        unset($vars['links']['nothing_1']);
      }
    }
  }
}
